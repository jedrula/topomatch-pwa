self.onmessage=async n=>{const{type:t,userImageBuffer:e}=n.data;if(t==="createSession")try{const a=performance.now(),m=await ort.InferenceSession.create("../../superpoint_lightglue_pipeline.ort.onnx"),o=performance.now();self.session=m,self.postMessage({type:"sessionCreated",data:{sessionTime:o-a}})}catch(a){self.postMessage({type:"error",data:{message:a.message}})}if(t==="runInference"){if(!self.session){self.postMessage({type:"error",data:{message:"Session is not initialized."}});return}try{if(!e){self.postMessage({type:"error",data:{message:"No user image provided."}});return}const a=new Blob([e]),m=await createImageBitmap(a),r=await I("../../fabryczna_otwarcie_topo.jpg"),c=[m,r],s=256,i=256,p=c.map((w,y)=>b(w,s,i,y)),f=new Float32Array([...p[0],...p[1]]),g={images:new ort.Tensor("float32",f,[2,1,i,s])},d=performance.now(),l=await self.session.run(g),u=performance.now();self.postMessage({type:"inferenceComplete",data:{inferenceTime:u-d,results:l,images:c,imgWidth:s,imgHeight:i}})}catch(a){self.postMessage({type:"error",data:{message:a.message}})}}};function b(n,t,e,a){const o=new OffscreenCanvas(t,e).getContext("2d");o.drawImage(n,0,0,t,e);const r=o.getImageData(0,0,t,e).data,c=new Float32Array(t*e);for(let s=0;s<t*e;s++){const i=r[s*4]/255,p=r[s*4+1]/255,f=r[s*4+2]/255;c[s]=.299*i+.587*p+.114*f}return c}async function I(n){const e=await(await fetch(n)).blob();return await createImageBitmap(e)}
